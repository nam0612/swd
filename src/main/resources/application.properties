spring.datasource.url=jdbc:mariadb://localhost:3306/swd392_database
spring.datasource.username=root

spring.datasource.password=123

spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

#Hibernate Configuration
# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
#spring.jpa.hibernate.ddl-auto=update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDB103Dialect

# naming strategy
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.open-in-view=false


# Spring Data Rest Setup
spring.data.rest.base-path=/api


# Spring Server setup
server.address=127.0.0.1
server.port=8080
server.compression.enabled=true
server.http2.enabled=true


#jwt
app.jwt.secret=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
app.jwt.expiration.minutes=86400000

app.oauth2.redirectUri=http://localhost:3000/oauth2/redirect
spring.application.name=swd
app.cors.allowed-origins=http://localhost:3000
spring.security.oauth2.client.registration.github.clientId=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.clientSecret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.scope=read:user, user:email

spring.security.oauth2.client.registration.google.clientId=147815982396-m3bf2717suotohjl2vr47dv4os2frq50.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret=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
spring.security.oauth2.client.registration.google.scope=profile, email


spring.main.allow-circular-references=true
